{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lwant\\\\OneDrive\\\\Desktop\\\\hokohoko\\\\src\\\\FileInput.js\";\nimport React, { useEffect, useState, Component } from 'react';\nimport { createWorker } from 'tesseract.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class FileInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fileInput = /*#__PURE__*/React.createRef();\n    this.state = {\n      text: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 19\n      }, this)\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      text: PerformOCR(this.fileInput.current.files[0])\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Upload screenshot:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: this.fileInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"a\",\n        children: this.state.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction PerformOCR(url) {\n  const worker = createWorker({\n    logger: m => console.log(m)\n  });\n  var ocr = \"\";\n\n  const doOCR = async () => {\n    await worker.load();\n    await worker.loadLanguage('eng');\n    await worker.initialize('eng');\n    const {\n      data: {\n        text\n      }\n    } = await worker.recognize(url);\n    console.log(text);\n    ocr = text;\n  }; //const [ocr, setOcr] = useState('Recognizing...');\n  //useEffect(() => {\n\n\n  doOCR(); //});\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: ocr\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n\n_c = PerformOCR;\n\nvar _c;\n\n$RefreshReg$(_c, \"PerformOCR\");","map":{"version":3,"sources":["C:/Users/lwant/OneDrive/Desktop/hokohoko/src/FileInput.js"],"names":["React","useEffect","useState","Component","createWorker","FileInput","constructor","props","handleSubmit","bind","fileInput","createRef","state","text","event","preventDefault","setState","PerformOCR","current","files","render","url","worker","logger","m","console","log","ocr","doOCR","load","loadLanguage","initialize","data","recognize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,YAAT,QAA6B,cAA7B;;AAEA,eAAe,MAAMC,SAAN,SAAwBL,KAAK,CAACG,SAA9B,CAAwC;AACnDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,SAAL,gBAAiBV,KAAK,CAACW,SAAN,EAAjB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,KAAb;AAGH;;AACDL,EAAAA,YAAY,CAACM,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACC,cAAN;AACA,SAAKC,QAAL,CAAc;AACVH,MAAAA,IAAI,EAAEI,UAAU,CAAC,KAAKP,SAAL,CAAeQ,OAAf,CAAuBC,KAAvB,CAA6B,CAA7B,CAAD;AADN,KAAd;AAGH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAKZ,YAArB;AAAA,8BACI;AAAA,sDAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,GAAG,EAAE,KAAKE;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAK,QAAA,KAAK,EAAC,GAAX;AAAA,kBAAgB,KAAKE,KAAL,CAAWC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA3BkD;;AA8BvD,SAASI,UAAT,CAAoBI,GAApB,EAAyB;AACrB,QAAMC,MAAM,GAAGlB,YAAY,CAAC;AAC1BmB,IAAAA,MAAM,EAAEC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ;AADa,GAAD,CAA3B;AAGA,MAAIG,GAAG,GAAG,EAAV;;AACA,QAAMC,KAAK,GAAG,YAAY;AACxB,UAAMN,MAAM,CAACO,IAAP,EAAN;AACA,UAAMP,MAAM,CAACQ,YAAP,CAAoB,KAApB,CAAN;AACA,UAAMR,MAAM,CAACS,UAAP,CAAkB,KAAlB,CAAN;AACA,UAAM;AAAEC,MAAAA,IAAI,EAAE;AAAEnB,QAAAA;AAAF;AAAR,QAAqB,MAAMS,MAAM,CAACW,SAAP,CAAiBZ,GAAjB,CAAjC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACAc,IAAAA,GAAG,GAAGd,IAAN;AACD,GAPD,CALqB,CAarB;AACA;;;AACEe,EAAAA,KAAK,GAfc,CAgBrB;;AACA,sBACE;AAAA,cAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;KApBMV,U","sourcesContent":["import React, { useEffect, useState, Component } from 'react';\r\nimport { createWorker } from 'tesseract.js';\r\n\r\nexport default class FileInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.fileInput = React.createRef();\r\n        this.state = {\r\n            text: <p>Hi</p>\r\n        }\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            text: PerformOCR(this.fileInput.current.files[0])\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    Upload screenshot:\r\n                    <input type=\"file\" ref={this.fileInput} />\r\n                </label>\r\n                <br/>\r\n                <button type=\"submit\">Submit</button>\r\n                <div class=\"a\">{this.state.text}</div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nfunction PerformOCR(url) {\r\n    const worker = createWorker({\r\n      logger: m => console.log(m),\r\n    });\r\n    var ocr = \"\"\r\n    const doOCR = async () => {\r\n      await worker.load();\r\n      await worker.loadLanguage('eng');\r\n      await worker.initialize('eng');\r\n      const { data: { text } } = await worker.recognize(url);\r\n      console.log(text);\r\n      ocr = text;\r\n    };\r\n    //const [ocr, setOcr] = useState('Recognizing...');\r\n    //useEffect(() => {\r\n      doOCR();\r\n    //});\r\n    return (\r\n      <p>{ocr}</p>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}