{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lwant\\\\OneDrive\\\\Desktop\\\\hokohoko\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Component } from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport { createWorker } from 'tesseract.js';\nimport './App.css';\nimport FileInput from './FileInput.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavBar = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"navbar\",\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"HokoHoko\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Link, {\n    to: \"/\",\n    children: \"Lists\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Link, {\n    to: \"/new\",\n    children: \"New Comparison\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\n_c = NavBar;\n\nconst Template = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"page-info\",\n    children: [props.title, \":\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: props.status,\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Task 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Task 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Task 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n\n_c2 = Template;\n\nconst ComparisonList = () => /*#__PURE__*/_jsxDEV(Template, {\n  title: \"Lists\",\n  status: \"Lists\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 3\n}, this);\n\n_c3 = ComparisonList;\n\nconst AddNewComparison = () => /*#__PURE__*/_jsxDEV(Template, {\n  title: \"Add Comparison\",\n  status: \"Add\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 3\n}, this);\n\n_c4 = AddNewComparison;\n\nconst test = () => /*#__PURE__*/_jsxDEV(Template, {\n  title: \"test\",\n  status: \"Lists\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 3\n}, this);\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: test\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/new\",\n          component: AddNewComparison\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction PerformOCR(url) {\n  _s();\n\n  const worker = createWorker({\n    logger: m => console.log(m)\n  });\n\n  const doOCR = async () => {\n    await worker.load();\n    await worker.loadLanguage('eng');\n    await worker.initialize('eng');\n    const {\n      data: {\n        text\n      }\n    } = await worker.recognize(url);\n    setOcr(text);\n  };\n\n  const [ocr, setOcr] = useState('Recognizing...');\n  useEffect(() => {\n    doOCR();\n  });\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: ocr\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PerformOCR, \"wC2lgUhOs1inAMGMoDOFIxAb+lI=\");\n\n_c5 = PerformOCR;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"NavBar\");\n$RefreshReg$(_c2, \"Template\");\n$RefreshReg$(_c3, \"ComparisonList\");\n$RefreshReg$(_c4, \"AddNewComparison\");\n$RefreshReg$(_c5, \"PerformOCR\");","map":{"version":3,"sources":["C:/Users/lwant/OneDrive/Desktop/hokohoko/src/App.js"],"names":["React","useEffect","useState","Component","BrowserRouter","Route","Link","createWorker","FileInput","NavBar","Template","props","title","status","ComparisonList","AddNewComparison","test","App","render","PerformOCR","url","worker","logger","m","console","log","doOCR","load","loadLanguage","initialize","data","text","recognize","setOcr","ocr"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,IAA/B,QAA2C,kBAA3C;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;;AAEA,MAAMC,MAAM,GAAG,mBACb;AAAK,EAAA,SAAS,EAAC,QAAf;AAAA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMA,M;;AAQN,MAAMC,QAAQ,GAAIC,KAAD,iBACf;AAAA,0BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA,eACGA,KAAK,CAACC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,eAKE;AAAI,IAAA,SAAS,EAAED,KAAK,CAACE,MAArB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UALF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMH,Q;;AAiBN,MAAMI,cAAc,GAAG,mBACrB,QAAC,QAAD;AAAU,EAAA,KAAK,EAAC,OAAhB;AAAwB,EAAA,MAAM,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMA,c;;AAIN,MAAMC,gBAAgB,GAAG,mBACvB,QAAC,QAAD;AAAU,EAAA,KAAK,EAAC,gBAAhB;AAAiC,EAAA,MAAM,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMA,gB;;AAIN,MAAMC,IAAI,GAAG,mBACX,QAAC,QAAD;AAAU,EAAA,KAAK,EAAC,MAAhB;AAAuB,EAAA,MAAM,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,QADF;;AAIA,MAAMC,GAAN,SAAkBd,SAAlB,CAA4B;AAC1Be,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,aAAD;AAAA,6BACE;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEF;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAED;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAVyB;;AAa5B,SAASI,UAAT,CAAoBC,GAApB,EAAyB;AAAA;;AACvB,QAAMC,MAAM,GAAGd,YAAY,CAAC;AAC1Be,IAAAA,MAAM,EAAEC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ;AADa,GAAD,CAA3B;;AAGA,QAAMG,KAAK,GAAG,YAAY;AACxB,UAAML,MAAM,CAACM,IAAP,EAAN;AACA,UAAMN,MAAM,CAACO,YAAP,CAAoB,KAApB,CAAN;AACA,UAAMP,MAAM,CAACQ,UAAP,CAAkB,KAAlB,CAAN;AACA,UAAM;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AAAR,QAAqB,MAAMV,MAAM,CAACW,SAAP,CAAiBZ,GAAjB,CAAjC;AACAa,IAAAA,MAAM,CAACF,IAAD,CAAN;AACD,GAND;;AAOA,QAAM,CAACG,GAAD,EAAMD,MAAN,IAAgB/B,QAAQ,CAAC,gBAAD,CAA9B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,KAAK;AACN,GAFQ,CAAT;AAGA,sBACE;AAAA,cAAIQ;AAAJ;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAlBQf,U;;MAAAA,U;AAmBT,eAAeF,GAAf","sourcesContent":["import React, { useEffect, useState, Component } from 'react';\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\nimport { createWorker } from 'tesseract.js';\r\nimport './App.css';\r\nimport FileInput from './FileInput.js'\r\n\r\nconst NavBar = () => (\r\n  <div className=\"navbar\">\r\n    <h3>HokoHoko</h3>\r\n    <Link to=\"/\">Lists</Link>\r\n    <Link to=\"/new\">New Comparison</Link>\r\n  </div>\r\n);\r\n\r\nconst Template = (props) => (\r\n  <div>\r\n    <NavBar />\r\n    <p className=\"page-info\">\r\n      {props.title}:\r\n    </p>\r\n    <ul className={props.status}>\r\n        <li>Task 1</li>\r\n        <li>Task 2</li>\r\n        <li>Task 3</li>\r\n    </ul>\r\n    \r\n  </div>\r\n\r\n);\r\n\r\n\r\nconst ComparisonList = () => (\r\n  <Template title=\"Lists\" status=\"Lists\"/>\r\n);\r\n\r\nconst AddNewComparison = () => (\r\n  <Template title=\"Add Comparison\" status=\"Add\"/>\r\n);\r\n\r\nconst test = () => (\r\n  <Template title=\"test\" status=\"Lists\"/>\r\n);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <Route exact path=\"/\" component={test}/>\r\n          <Route path=\"/new\" component={AddNewComparison}/>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PerformOCR(url) {\r\n  const worker = createWorker({\r\n    logger: m => console.log(m),\r\n  });\r\n  const doOCR = async () => {\r\n    await worker.load();\r\n    await worker.loadLanguage('eng');\r\n    await worker.initialize('eng');\r\n    const { data: { text } } = await worker.recognize(url);\r\n    setOcr(text);\r\n  };\r\n  const [ocr, setOcr] = useState('Recognizing...');\r\n  useEffect(() => {\r\n    doOCR();\r\n  });\r\n  return (\r\n    <p>{ocr}</p>\r\n  );\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}